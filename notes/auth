http://stackoverflow.com/questions/549/the-definitive-guide-to-form-based-website-authentication#477579
http://stackoverflow.com/questions/244882/what-is-the-best-way-to-implement-remember-me-for-a-website
http://jaspan.com/improved_persistent_login_cookie_best_practice
https://paragonie.com/blog/2015/04/secure-authentication-php-with-long-term-persistence#title.2

Authentication for the websockets
  https://devcenter.heroku.com/articles/websocket-security
  https://auth0.com/blog/auth-with-socket-io/
  http://howtonode.org/socket-io-auth


Chat -
  - curently, client sends username with chat message.
  - now, the username will just be determined based on the socket's session token.


Auth behavior, first pass
  - our room is public
  - chat is allowed only if you choose a nickname or log in
  - welcome screen (redirect here if try to access room with no nickname or auth)
  - Login should redirect to the room afterward
  - not allowed without auth:
    - DJing
      - Don't show the search bar
      - Don't show the 'click to dj' button
      - (show a message in the queue panel)
    - skip
  - auto log out after... 3 days?
  - remember me
    - what exactly does this do?
    - means that you can close the browser and stay logged in?
  - user can reset password
  - don't require logging in every day
    - I guess this means reissuing a token when the expiration gets close
    - if the browser stays open, let it keep refreshing its token (once a day would be fine)

Do next:
  - SERVER
    - for guests:
      - allowMuteStatus = true
      - showChatImages = false
    - add reset password feature
      - sends an email to the user with a generated link
        - add /reset-password/:uuid
        - link expires after 1 day
    - add auth check to... pretty much everything but chat and hoot
      - since everything uses sockets, I think this means authenticating socket connections
    - set 'secure' flag on sessionToken and configure nginx to modify the cookie on requests
    - make sure the new paths are routed to nodejs from nginx
  - UI
    - periodically, server makes client refresh websocket connection
    - no more 'username' cookie?
    - Add reset password link to login
    - redirect to /welcome if you know you aren't authed?
      - check for session token
      - check expiration
      - make sure socket can connect


Do later:
  - nicknames for account users
  - room admin page
  - independent auth micro-service
  - throttling/limiting for login and reset password
