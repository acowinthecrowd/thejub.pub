nav(class='navbar navbar-inverse navbar-fixed-top' id='top-nav')
  form(class='navbar-form form-group navbar-left',
       id='load_video', action='')

    div(class='input-group input-group-md')
      span(class='input-group-btn jub-nav-top-item')
        button(class='btn btn-default', type='button', id='join-dj',
               data-toggle='tooltip', data-placement='top',
               title='Click to DJ')
          span(id='join-dj-icon', class='glyphicon glyphicon-user')
      input(class='form-control jub-nav-input jub-nav-top-item', id='omnibox',
            style='width:300px; margin-right:10px; margin-left:5px;',
            placeholder='Search / video or playlist ID / URL')
      span(class='input-group-btn jub-nav-top-item')
        button(class='btn btn-default', type='button', id='enqueue',
               data-toggle="tooltip",
               data-placement="bottom", title="Add to queue")
          span(id='enqueue-icon', class='glyphicon glyphicon-import')
        button(class='btn btn-default', type='button', id='dequeue',
               data-toggle='tooltip',
               data-placement='bottom', title='Remove last video')
          span(id='dequeue-icon', class='glyphicon glyphicon-export')
        button(class='btn btn-default',type='button',
               id='skip', data-toggle='tooltip',
               data-placement='bottom', title='Skip')
          span(id='skip-icon', class='glyphicon glyphicon-fast-forward')
        button(class='btn btn-default',type='button',
               id='mute', data-toggle='tooltip',
               data-placement='bottom', title='Skip')
          span(id='mute-icon', class='glyphicon glyphicon-volume-up')

  ul(class='nav navbar-nav navbar-right')
    // Username
    li(class='jub-nav-top-item')
      form(class='navbar-form form-group', id='auth', action='')
        input(class='form-control jub-nav-input jub-nav-top-item', id='username',
              style='margin:0 50px 10px 0;',
              placeholder='User name', autocomplete='off')
    // Title
    li
      p(class='navbar-text', id='title', style='font-size:36px;')= title


include ./username.jade

script.

  var MAX_RESULTS = 7;
  var MAX_PRETTY_LEN = 60;
  var djing = false;

  //TODO: load the controls and player in a deliberate order so one can reflect the other's mute state
  $( document ).ready(function() {
    draw_mute_state();
  });

  function draw_mute_state() {
    var is_muted = get_cookie('muted');
    if (is_muted == 1) {
      $('#mute-icon').attr('class', 'glyphicon glyphicon-volume-off');
      $('#mute').attr('title', 'Unmute');
    } else {
      $('#mute-icon').attr('class', 'glyphicon glyphicon-volume-up');
      $('#mute').attr('title', 'Mute');
    }
  }

  function draw_dj_state() {
    var elem = $('#join-dj');
    if (djing) {
      elem.css('background', '#2DB85A');
      elem.css('color', '#000');
      $('#join-dj-icon').attr('class', 'glyphicon glyphicon-headphones');
      $('#join-dj').attr('title', 'Stop DJing');
    } else {
      elem.css('background', '#3F2C52');
      elem.css('color', '#FFFFFF');
      $('#join-dj-icon').attr('class', 'glyphicon glyphicon-user');
      $('#join-dj').attr('title', 'Click to DJ');
    }
  }

  // e.g. "michelleheafy: Some cool video about someth..."
  function prettify_result(result) {
    var artist = result.snippet.channelTitle
    var pretty = artist + ": " + result.snippet.title;
    if (pretty.length > MAX_PRETTY_LEN) {
      pretty = pretty.slice(0, MAX_PRETTY_LEN - 3) + "...";
    }
    return pretty
  }

  // Take in youtube search result items and turn them into an array of objects
  // that autocomplete can handle, truncating the list in the process
  function transform_search_results(results) {
    return results.slice(0, MAX_RESULTS).map(function(result) {
      return {
        label: prettify_result(result),
        value: result.id.videoId
      }
    });
  }

  $('#omnibox').autocomplete({
    // Request a video search; once the results come back, update the UI
    source: function(request, response) {
      socket.emit('video search', request['term'], function(results) {
        response(transform_search_results(results));
      })
    },

    // Don't change the value of the search box while user is choosing
    focus: function(event, ui) {
      return false;
    },

    // When a user chooses a suggestion (hits enter) start the video
    select: function(event, ui) {
      var event = $.Event("submit");
      event.video_id = ui.item.value;
      $('#load_video').trigger(event);
      return false;
    },
    minLength: 5
  });

  // Client text box for submitting a video
  $('#load_video').submit(function(event) {
    // We might have been invoked straight from an autocomplete callback,
    // in which case the value of the search box is not the video id; it's
    // a pretty label, and the video id was passed in with the event.
    var id = event.video_id;
    var channel = 'video enqueue';

    // We were invoked via a normal form submit
    if (id == undefined) {
      id = $('#omnibox').val();
    }

    // Accept video URLs
    if (id.starts_with('https:\/\/www.youtube.com')) {
      console.log('url');
      if (id.indexOf('youtube.com\/watch') > 0) { // TODO do we have regex?
        console.log('video');
        id = id.split('watch?v=')[1];
      } else if (id.indexOf('youtube.com\/playlist') > 0) {
        console.log('playlist');
        id = id.split('playlist?list=')[1];
      }
    }

    // Now it's an id (either a playlist or video)
    if (id.length > 11) { // TODO not sure it this will always be true
      channel = 'playlist submit';
    }

    // send the new video state out and clear the video search box
    var submission = {
      user: get_cookie('username'),
      id: id
    }
    console.log('submitting', submission);
    socket.emit(channel, submission);
    $('#omnibox').val('');
    return false;
  });

  // Enqueue
  $('#enqueue').on('click', function(e) {
    var user = get_cookie('username');
    console.log('sending enqueue for:', user);
    var event = $.Event("submit");
    event.video_id = $('#omnibox').val();
    $('#load_video').trigger(event);
    return false;
  });

  // Dequeue
  $('#dequeue').on('click', function(e) {
    var user = get_cookie('username');
    console.log('sending dequeue for:', user);
    socket.emit('video dequeue', user);
    return false;
  });

  // Skip
  $('#skip').on('click', function(e) {
    var user = get_cookie('username');
    socket.emit('video skip', user);
    return false;
  });

  // Mute button
  $('#mute').on('click', function(e) {
    e.preventDefault();
    var expiration_date = new Date();
    expiration_date.setFullYear(expiration_date.getFullYear() + 1);
    if (player.isMuted()) {
      player.unMute();
      document.cookie = 'muted=0; ' + 'expires=' + expiration_date.toGMTString();
    }
    else {
      player.mute();
      document.cookie = 'muted=1; ' + 'expires=' + expiration_date.toGMTString();
    }
    draw_mute_state();
    return false;
  });

  // DJ button
  $('#join-dj').on('click', function() {
    if (!djing) {
      socket.emit('add dj', get_username());
      console.log("add dj");
      djing = true;
    } else {
      socket.emit('remove dj', get_username());
      console.log("remove dj");
      djing = false;
    }
    draw_dj_state();
  });

  // Server has some user data for us
  socket.on('user data', function(data) {
    console.log('received user data:', data);
    djing = data.dj;
    draw_dj_state();
  });
