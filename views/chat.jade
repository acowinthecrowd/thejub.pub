ul(id="messages", class="jub-list")
div(class='row')
  form(class='form-inline', id='chat', action='')
    div(class='col-md-10')
      input(class='form-control', id='chat-input',
            style='width: 100%;', autocomplete='off')
    div(class='col-md-2')
      button(class='btn btn-default') Send

script.
  $('#chat').submit(function() {
    var msg = $('#chat-input').val();
    var username = get_cookie('username');
    if (username == '') {
      alert('You must be logged in to chat.')
    } else {
      socket.emit('chat message', {
        user: username,
        text: msg
      });
    }
    $('#chat-input').val('');
    return false;
  });

  // TODO client should put together "username: message", not server
  socket.on('chat message', function(msg_obj) {
    if (msg_obj.text == undefined) {
      return;
    }
    if (msg_obj.text.indexOf(get_username()) > 0) {
      if (!msg_obj.bot) {
        $.titleAlert((msg_obj.user || 'someone') + ' says...', {
          requireBlur: true,
          duration: 0,
          interval: 700
        });
      }
    }

    console.log('received chat', msg_obj);
    var list = $('#messages');
    var new_item = $('<li>');
    var lines = msg_obj.text.split('\n');

    // Before appending, note the height of the history.
    var old_y = list.height();
    var max_y = parseInt(list.css('max-height'), 10);
    var at_bottom = (list[0].scrollTop == list[0].scrollHeight - max_y);

    // Insert <br>'s where \n's used to be
    for (line of lines) {
      new_item.append(document.createTextNode(line));
      new_item.append('<br>');
    }

    // Italicize if needed
    if (msg_obj['emph']) {
      new_item.css('font-style', 'italic');
    }

    list.append(new_item);
    var new_y = list.height();

    // If the chat box is newly scrolling or we were already scrolled to the
    // bottom, scroll to the bottom
    if ((old_y < max_y) && (new_y >= max_y) || at_bottom) {
      list[0].scrollTop = list[0].scrollHeight;
    }
  });
